//              ‚ñì‚ñì‚ñì‚ñì  ‚ñì‚ñì‚ñì‚ñì  ‚ñì‚ñì‚ñà‚ñà  ‚ñì‚ñì‚ñà‚ñà                      
//              ‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì                      
//              ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                      
//                ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                        
//                 ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì                          
//                   ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñà   
//                   ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì              
//               ‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì                              ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
//             ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà         
//           ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                        ‚ñà‚ñà        ‚ñà‚ñà                       
//         ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                      ‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà         
//       ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                    ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñÄ‚ñà        
//     ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì    ‚ñà             ‚ñÄ‚ñà        ‚ñà‚ñÄ        
//     ‚ñì‚ñì‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì    ‚ñà‚ñà                  ‚ñà              
//   ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì   ‚ñà              ‚ñà‚ñà     ‚ñà‚ñà                                                                                  
//   ‚ñì‚ñì‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì /‚ñà‚ñÑ            ‚ñà‚ñà‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà                                                                                   
// ‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                                
// ‚ñì‚ñì‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                             
// ‚ñì‚ñì‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì             ‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà                                                                              
// ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì              ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà                                                                             
// ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì              ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                           
//   ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ                                                                            
//   ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                                 
//    ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                                
//    ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                               
//    ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ‚ñÑ                                                                        
//    ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ                                                                           
//      ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì                           ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà                                                                          
//        ‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì                             ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà                                                                                 
//            ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì                                ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñÄ                                                                                   
//             ‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñì‚ñë‚ñë                               ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ                                                                          
//                             
// ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó 
// ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù 
// ‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó 
// ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë 
// ‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë 
//  ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù 

// This Pine Script‚Ñ¢ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// ¬© WeloTrades

//@version=5
strategy(title="Market Cipher B by Grandad (based on Welotrades)", shorttitle="MCB {Grandad}", overlay=true, max_bars_back=5000, max_lines_count=500, max_boxes_count=500, max_labels_count=500, default_qty_type=strategy.percent_of_equity, default_qty_value=1 ,use_bar_magnifier=true)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////      INPUTS      ///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Display Settings //
showOrderBox        = input.bool(true, title="Show Order box")
showWMCBlvl         = input(false, title='üëÄ WT OB & OS', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings2", tooltip="Display WaveTrend Overbought and Oversold levels")
showWTChannel       = input(false, title='üëÄ WT Channel', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings3", tooltip="Display the WaveTrend channel")
showWTDifference    = input(false, title='üëÄ WT Difference', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings6", tooltip="Display the difference between the WaveTrend channels")
showmoneyFlowFast   = input(false, title='üëÄ Fast MoneyFlow', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings4", tooltip="Display the fast Money Flow indicator")
showmoneyFlowSlow   = input(false, title='üëÄ Slow MoneyFlow', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings5", tooltip="Display the slow Money Flow indicator")
showWRSIlvl         = input(false, title='üëÄ RSI', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings7", tooltip="Display the Relative Strength Index (RSI)")
showStochasticRSI   = input(false, title='üëÄ Stochastic RSI', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings8", tooltip="Display the Stochastic RSI indicator")
showMajorDivergence = input(false, title='üëÄ Potential Top & Bottom', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings1", tooltip="Display potential tops and bottoms based on divergences")
topSymbol           = input.string("T", title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings1", options=["T", "üí•", "üî∫", "üîª", "‚õî", "‚ùå"])
bottomSymbol        = input.string("B", title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Display Settings1", options=["B", "üí•", "üî∫", "üîª", "‚úÖ", "‚úîÔ∏è"], tooltip="Display Symbol for potential tops / Symbol for potential bottoms")
showCross           = input.bool(false, title='üëÄ WT Cross Circles', group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Cross Settings")
crossSymbolStyle    = input.string("shape_circle", title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Cross Settings", options=["shape_arrow_up", "shape_arrow_down", "shape_circle", "shape_cross", "shape_diamond", "shape_flag", "shape_label_up", "shape_label_down", "shape_square", "shape_triangle_up", "shape_triangle_down"])
bullishCrossColor   = input.color(color.rgb(0, 255, 8), title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Cross Settings")
bearishCrossColor   = input.color(color.rgb(255, 0, 0), title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Cross Settings", tooltip="Display WaveTrend cross circles / Style of the cross symbol / Color for bullish cross / Color for bearish cross")
showBull            = input.bool(true, title="üëÄ Regular Bullish Div", group = "+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Bull")
bullSymbol          = input.string("üêÆ", title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Bull", options=["üêÆ", "üü¢", "‚¨ÜÔ∏è", "‚úîÔ∏è"], tooltip="Display regular bullish divergences / Symbol for regular bullish divergences")
showBear            = input.bool(false, title="üëÄ Regular Bearish Div", group = "+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Bear")
bearSymbol          = input.string("üêª", title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Bear", options=["üêª", "üî¥", "‚¨áÔ∏è", "‚ùå"], tooltip="Display regular bearish divergences / Symbol for regular bearish divergences")
showHiddenBull      = input.bool(false, title="üëÄ Hidden Bullish Div", group = "+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="HiddenBull")
hiddenBullSymbol    = input.string("üîé", title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="HiddenBull", options=["üîé", "üü¢", "‚¨ÜÔ∏è", "‚úîÔ∏è"], tooltip="Display hidden bullish divergences / Symbol for hidden bullish divergences")
showHiddenBear      = input.bool(false, title="üëÄ Hidden Bearish Div", group = "+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="HiddenBear")
hiddenBearSymbol    = input.string("üîç", title="", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="HiddenBear", options=["üîç", "üî¥", "‚¨áÔ∏è", "‚ùå"], tooltip="Display hidden bearish divergences / Symbol for hidden bearish divergences")
textColor           = input.color(color.rgb(255, 255, 255), title="üé® Text Color", group="+++++++++++++ DISPLAY SETTINGS +++++++++++++", inline="Text", tooltip="Color for text display")
bearColor           = color.rgb(255, 0, 0)
bullColor           = color.rgb(0, 255, 8)
hiddenBullColor     = color.rgb(0, 255, 8)
hiddenBearColor     = color.rgb(255, 0, 0)
noneColor           = color.rgb(255, 255, 255, 100)
orderPercentage     = input.float(1.00, "Order %", minval=0.1, maxval=100, step=0.1, group="Orders", tooltip="How much of the tickers current value do you want to place an order for?")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Wave Trend Channel Settings //
ap                 = input(close, title="üîç Source", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel1", tooltip="Source for the WaveTrend calculation")
n1                 = input(9, "üìè WT Channel Length", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel2")
waveTrendColor1    = input.color(color.rgb(0, 255, 235), title="", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel2")
waveTrendWidth1    = input.int(1, title="Width", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel2", tooltip="Length of the WaveTrend channel / Color of the first WaveTrend channel / Width of the first WaveTrend channel")
n2                 = input(21, "üìè WT Channel Average L", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel2_")
waveTrendColor2    = input.color(color.rgb(0, 65, 255), title="", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel2_")
waveTrendWidth2    = input.int(1, title="Width", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel2_", tooltip="Length of the WaveTrend channel average / Color of the second WaveTrend channel / Width of the second WaveTrend channel")
waveTrendDiffColor = input.color(color.rgb(255, 230, 0), title="üé® WT Difference Color", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel_2", tooltip="Color of the difference between the WaveTrend channels")
MCBobLevel1        = input(60, "üìàüìâ WT OB 1 & 2", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel3")
MCBobLevel2        = input(53, "", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel3", tooltip="Overbought level 1 for WaveTrend / Overbought level 2 for WaveTrend")
mcbOBColor1        = input.color(color.rgb(255, 0, 0), title="üé® WT OB 1 & 2 Style", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel3_")
mcbOBColor1_       = input.color(color.rgb(255, 0, 0), title="", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel3_")
mcbLineWidth1_2    = input.int(2, title="Width", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel3_", tooltip="Color style for WaveTrend overbought levels / Line width for WaveTrend overbought levels")
MCBosLevel1        = input(-60, "üìàüìâ WT OS 1 & 2", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel4")
MCBosLevel2        = input(-53, "", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel4", tooltip="Oversold level 1 for WaveTrend / Oversold level 2 for WaveTrend")
mcbOSColor2        = input.color(color.rgb(0, 255, 8), title="üé® WT OS 1 & 2 Style", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel4_")
mcbOSColor2_       = input.color(color.rgb(0, 255, 8), title="", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel4_")
mcbLineWidth1_2_   = input.int(2, title="Width", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel4_", tooltip="Color style for WaveTrend oversold levels / Line width for WaveTrend oversold levels")
wtDivergenceLength = input(28, "‚è≤ MCB Potential Top / Bottom üí• Range", group="+++++++++++++ WAVE TREND CHANNEL SETTINGS +++++++++++++", inline="WaveTrend Channel6", tooltip="Lookback range for potential tops and bottoms")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Regular & Hidden Divergences settings //
lbL        = input.int(10, title="‚Üî Pivot Lookback Left / Right", group="++++++++ üêÆ/üîé DIVERGENCE SETTINGS üêª/üîç ++++++++", inline='DIV1')
lbR        = input.int(10, "", group="++++++++ üêÆ/üîé DIVERGENCE SETTINGS üêª/üîç ++++++++", inline='DIV1', tooltip="Lookback period to the left & right for pivots")
rangeLower = input.int(10, title="‚ûñ‚ûï Min / Max Lookback Range", group="++++++++ üêÆ/üîé DIVERGENCE SETTINGS üêª/üîç ++++++++", inline='DIV2')
rangeUpper = input.int(100, title="", group="++++++++ üêÆ/üîé DIVERGENCE SETTINGS üêª/üîç ++++++++", inline='DIV2', tooltip="Minimum & Maximum lookback range")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Fast Money Flow settings //
moneyFlowPeriod       = input.int(9, "üìè Fast Money Flow Length", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", minval=1, inline="Money Flow1")
fastMoneyFlowColor    = input.color(color.rgb(0, 255, 0, 35), title="", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", inline="Money Flow1")
fastMoneyFlowNegColor = input.color(color.rgb(255, 0, 0, 35), "", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", inline="Money Flow1", tooltip="Length of the fast Money Flow period / Color for positive & negative fast Money Flow")
moneyFlowMultiplier   = input.float(5, title="‚Üï‚Üî Multiplier / Y Position", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", minval=0.1, maxval=1000.0, step=0.1, inline="Money Flow2")
moneyFlowYPos         = input.int(0, "", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", minval=-100, maxval=+100, inline="Money Flow2", tooltip="Multiplier and Y position for fast Money Flow / Y position adjustment for fast Money Flow")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Slow Money Flow settings //
moneyFlowPeriodSlow     = input.int(10, "üìè Slow Money Flow Length", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", minval=1, inline="Money Flow3")
slowMoneyFlowColor      = input.color(color.rgb(0, 255, 0, 45), title="", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", inline="Money Flow3")
slowMoneyFlowNegColor   = input.color(color.rgb(255, 0, 0, 45), "", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", inline="Money Flow3", tooltip="Length of the slow Money Flow period / Color for positive & negative slow Money Flow")
moneyFlowMultiplierSlow = input.float(5, title="‚Üï‚Üî Multiplier / Y Position", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", minval=0.1, maxval=1000.0, step=0.1, inline="Money Flow4")
moneyFlowYPosSlow       = input.int(0, "", group="+++++++++++++ MONEY FLOW SETTINGS +++++++++++++", minval=-100, maxval=+100, inline="Money Flow4", tooltip="Multiplier and Y position for slow Money Flow / Y position adjustment for slow Money Flow")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// RSI Oversold & Overbought Settings //
rsiLength         = input(14, "üìè RSI Length / Smooth", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings1")
rsiSmoothLength   = input(5, "", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings1")
rsiLineColor      = input.color(color.rgb(212, 243, 33), title="", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings1")
rsiSmoothColor    = input.color(color.rgb(0, 255, 234), title="", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings1", tooltip="Length and smoothing period for RSI / Color for RSI line & smoothed RSI line")
obLevel0          = input(70, "üìàüìâOB / OS Level 1", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings2")
osLevel0          = input(30, "", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings2", tooltip="Overbought and oversold level 1 for RSI")
rsiOBColor0       = input.color(color.rgb(255, 0, 0, 50), title="üé® OB / OS Level 1 Style", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings2_")
rsiOSColor0       = input.color(color.rgb(0, 255, 8, 50), title="", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings2_")
rsiOBOSLineWidth0 = input.int(1, title="Width", group="++++++++ RSI OVERSOLD & OVERBOUGHT SETTINGS ++++++++", inline="RSI Settings2_", tooltip="Color style for overbought & oversold level 1 / Line width for overbought and oversold levels")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Stochastic RSI Settings //
stochLength            = input(14, "üìè Stoch RSI Length", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI1", tooltip="Length for Stochastic RSI")
stochSmoothK           = input(21, "üìè Stoch %K / %D", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI2")
stochSmoothD           = input(9, "", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI2")
stochKColor            = input.color(color.rgb(247, 0, 255), title="", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI2")
stochDColor            = input.color(color.rgb(33, 149, 243), "", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI2", tooltip="Smoothing period for %K and %D in Stochastic RSI / Color for %K & %D in Stochastic RSI")
stochSmoothKAdditional = input(3, "üìè Add %K / %D", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI3")
stochSmoothDAdditional = input(3, "", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI3")
stochKAddColor         = input.color(color.rgb(247, 0, 255, 25), title="", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI3")
stochDAddColor         = input.color(color.rgb(33, 149, 243, 25), "", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI3", tooltip="Additional smoothing period for %K and %D / Color for additional %K & %D in Stochastic RSI")
STOCHobLevel1          = input(80, "üìàüìâ Stoch OB / OS Level", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI4")
STOCHosLevel2          = input(20, "", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI4", tooltip="Overbought & Oversold level for Stochastic RSI")
stochOBColor           = input.color(color.rgb(255, 0, 0, 50), title="üé® Stoch OB / OS Style", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI4_")
stochOSColor           = input.color(color.rgb(0, 255, 8, 50), title="", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI4_")
stochOBOSLineWidth     = input.int(1, title="Width", group="+++++++++++++ STOCHASTIC RSI SETTINGS +++++++++++++", inline="Stochastic RSI4_", tooltip="Color style for overbought & oversold level in Stochastic RSI / Line width for overbought and oversold levels in Stochastic RSI")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////      calculations      /////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Calculation CHANNEL //
esa = ta.ema(ap, n1)
d   = ta.ema(math.abs(ap - esa), n1)
ci  = (ap - esa) / (0.015 * d)
tci = ta.ema(ci, n2 )
wt1 = tci
wt2 = ta.sma(wt1, 2)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Fast Money Flow Calculation //
rawMoneyFlow = (2 * ta.sma(hlc3 - ta.sma(hlc3, moneyFlowPeriod), moneyFlowPeriod)) / ta.sma(high - low, moneyFlowPeriod)
moneyFlow    = rawMoneyFlow * moneyFlowMultiplier

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Slow Money Flow Calculation //
rawMoneyFlowSlow = (2 * ta.sma(hlc3 - ta.sma(hlc3, moneyFlowPeriodSlow), moneyFlowPeriodSlow)) / ta.sma(high - low, moneyFlowPeriodSlow)
moneyFlowSlow    = rawMoneyFlowSlow * moneyFlowMultiplierSlow

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Bullish and Bearish Cross Calculation //
bullishCross = ta.cross(wt1, wt2) and wt2 > wt1 ? wt2 : na
bearishCross = ta.cross(wt1, wt2) and wt2 < wt1 ? wt2 : na

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TOP & BOTTOM detection for WaveTrend //
wt1_peak            = ta.highest(wt1, wtDivergenceLength)
wt1_trough          = ta.lowest(wt1, wtDivergenceLength)
bullishWTDivergence = ta.crossover(wt1, wt1_trough) and ta.crossover(close, ta.lowest(close, wtDivergenceLength))
bearishWTDivergence = ta.crossunder(wt1, wt1_peak) and ta.crossunder(close, ta.highest(close, wtDivergenceLength))

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Regular & Hidden Divergences Calculation //
normalize(value, max_val) =>
    value > max_val ? max_val : value < -max_val ? -max_val : value

fast_ma     = ta.sma(ap, n1)
slow_ma     = ta.sma(ap, n2)
macd        = ((fast_ma - slow_ma) / slow_ma)
signal      = ta.sma(macd, n2)
hist        = macd - signal
hist_change = ta.change(hist)
macd_change = ta.change(macd)
osc         = macd
plFound     = ta.pivotlow(osc, lbL, lbR)
phFound     = ta.pivothigh(osc, lbL, lbR)

_inRange(cond) =>
    bars = ta.barssince(cond)
    rangeLower <= bars and bars <= rangeUpper

// Regular Bullish
oscValueWhen   = ta.valuewhen(bool(plFound), osc[lbR], 1)
oscHL          = osc[lbR] > oscValueWhen and _inRange(plFound[1]) and osc[lbR] < 0
priceValueWhen = ta.valuewhen(bool(plFound), low[lbR], 1)
priceLL        = low[lbR] < priceValueWhen
priceHHZero    = ta.highest(osc, lbL + lbR + 5) 
bullCond       = showBull and priceLL and oscHL and plFound 

// Hidden Bullish
oscValueWhenHL   = ta.valuewhen(bool(plFound), osc[lbR], 1)
oscLL            = osc[lbR] < oscValueWhenHL and _inRange(plFound[1])
priceValueWhenHL = ta.valuewhen(bool(plFound), low[lbR], 1)
priceHL          = low[lbR] > priceValueWhenHL
hiddenBullCond   = showHiddenBull and priceHL and oscLL and plFound

// Regular Bearish
oscValueWhenLH   = ta.valuewhen(bool(phFound), osc[lbR], 1)
oscLH            = osc[lbR] < oscValueWhenLH and _inRange(phFound[1]) and osc[lbR]> 0
priceLLZero      = ta.lowest(osc, lbL + lbR + 5) 
priceValueWhenHH = ta.valuewhen(bool(phFound), high[lbR], 1)
priceHH          = high[lbR] > priceValueWhenHH
bearCond         = showBear and priceHH and oscLH and phFound 

// Hidden Bearish
oscValueWhenHH   = ta.valuewhen(bool(phFound), osc[lbR], 1)
oscHH            = osc[lbR] > oscValueWhenHH and _inRange(phFound[1])
priceValueWhenLH = ta.valuewhen(bool(phFound), high[lbR], 1)
priceLH          = high[lbR] < priceValueWhenLH
hiddenBearCond   = showHiddenBear and priceLH and oscHH and phFound

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// RSI Calculation //
rsi         = ta.rsi(close, rsiLength)
smoothedRsi = ta.sma(rsi, rsiSmoothLength)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Stochastic RSI Calculation //
stoch_rsi         = ta.stoch(rsi, rsi, rsi, stochLength)
smoothK           = ta.sma(stoch_rsi, stochSmoothK)
smoothD           = ta.sma(smoothK, stochSmoothD)
additionalSmoothK = ta.sma(smoothK, stochSmoothKAdditional)
additionalSmoothD = ta.sma(smoothD, stochSmoothDAdditional)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////      PLOTS      ////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// WaveTrend 1 & 2 Plots //
wt1_plot = showWTChannel ? wt1 : na
wt2_plot = showWTChannel ? wt2 : na
wt_diff_plot = showWTDifference ? wt1 - wt2 : na
plot(wt1_plot, style=plot.style_area, color=waveTrendColor1, linewidth=waveTrendWidth1, title="WaveTrend1")
plot(wt2_plot, style=plot.style_area, color=waveTrendColor2, linewidth=waveTrendWidth2, title="WaveTrend2")
plot(wt_diff_plot, style=plot.style_area, color=waveTrendDiffColor, linewidth=waveTrendWidth1, title="WaveTrends Difference")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// MoneyFlow Plots //
moneyFlowColor = moneyFlow > 0 ? fastMoneyFlowColor : fastMoneyFlowNegColor
plot(moneyFlow, color=showmoneyFlowFast ? moneyFlowColor : na, style=plot.style_area, linewidth=1, offset=moneyFlowYPos, title="Fast Money Flow")
moneyFlowColorSlow = moneyFlowSlow > 0 ? slowMoneyFlowColor : slowMoneyFlowNegColor
plot(moneyFlowSlow, color=showmoneyFlowSlow ? moneyFlowColorSlow : na, style=plot.style_area, linewidth=1, offset=moneyFlowYPosSlow, title="Slow Money Flow")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// MCB ob & os Level Plots //
plot(showWMCBlvl ? MCBobLevel1 : na, color=mcbOBColor1, linewidth=mcbLineWidth1_2, title="MCB OB Level 1")
plot(showWMCBlvl ? MCBobLevel2 : na, color=mcbOBColor1, linewidth=mcbLineWidth1_2, title="MCB OB Level 2")
plot(showWMCBlvl ? MCBosLevel1 : na, color=mcbOSColor2_, linewidth=mcbLineWidth1_2_, title="MCB OS Level 1")
plot(showWMCBlvl ? MCBosLevel2 : na, color=mcbOSColor2_, linewidth=mcbLineWidth1_2_, title="MCB OS Level 2")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// RSI Plots //
plot(showWRSIlvl ? rsi : na, color=rsiLineColor, linewidth=2, style=plot.style_line, title="RSI Line")
plot(showWRSIlvl ? smoothedRsi : na, color=rsiSmoothColor, linewidth=2, style=plot.style_line, title="RSI Smoothed Line")
plot(showWRSIlvl ? obLevel0 : na, color=rsiOBColor0, linewidth=rsiOBOSLineWidth0, style=plot.style_circles, title="RSI OB/OS Level 1")
plot(showWRSIlvl ? osLevel0 : na, color=rsiOSColor0, linewidth=rsiOBOSLineWidth0, style=plot.style_circles, title="RSI OB/OS Level 1")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Stochastic RSI Plots //
plot(showStochasticRSI ? smoothK : na, color=stochKColor, linewidth=2, style=plot.style_line, title="Stochastic RSI %K")
plot(showStochasticRSI ? smoothD : na, color=stochDColor, linewidth=2, style=plot.style_line, title="Stochastic RSI %D")
plot(showStochasticRSI ? additionalSmoothK : na, color=stochKAddColor, linewidth=2, style=plot.style_line, title="Stochastic RSI Additional %K")
plot(showStochasticRSI ? additionalSmoothD : na, color=stochDAddColor, linewidth=2, style=plot.style_line, title="Stochastic RSI Additional %D")
plot(showStochasticRSI ? STOCHobLevel1 : na, color=stochOBColor, linewidth=stochOBOSLineWidth, style=plot.style_circles, title="Stochastic RSI OB Level")
plot(showStochasticRSI ? STOCHosLevel2 : na, color=stochOSColor, linewidth=stochOBOSLineWidth, style=plot.style_circles, title="Stochastic RSI OS Level")

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Plot bullish and bearish divergences for WaveTrend //
plotchar(series=bullishWTDivergence and showMajorDivergence, location=location.bottom, color=color.rgb(0, 255, 8), size=size.tiny, text="Bottom", textcolor=textColor, title="Potential TOP", char=bottomSymbol)
plotchar(series=bearishWTDivergence and showMajorDivergence, location=location.top, color=color.rgb(255, 0, 0), size= size.tiny , text="Top", textcolor=textColor, title="Potential BOTTOM", char=topSymbol)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Bullish and Bearish Cross Plots //
plotshape(series=bool(bullishCross) and showCross ? bullishCross : na, location=location.absolute, color=bearishCrossColor, style=crossSymbolStyle, title="Bullish WT Cross", size=size.tiny)
plotshape(series=bool(bearishCross) and showCross ? bearishCross : na, location=location.absolute, color=bullishCrossColor, style=crossSymbolStyle, title="Bearish WT Cross", size=size.tiny)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Regular & Hidden divergences //
plotchar(bullCond ? osc[lbR] : na, offset=-lbR, location=location.bottom, color=bullColor, textcolor=textColor, size=size.tiny, title="Regular Bullish Label", text=" Bull ", char=bullSymbol)
plotchar(hiddenBullCond ? osc[lbR] : na, offset=-lbR, location=location.bottom, color=hiddenBullColor, textcolor=textColor, size=size.tiny, title="Hidden Bullish Label", text=" H Bull ", char=hiddenBullSymbol)
plotchar(bearCond ? osc[lbR] : na, offset=-lbR, location=location.top, color=bearColor, textcolor=textColor, size=size.tiny, title="Regular Bearish Label", text=" Bear ", char=bearSymbol)
plotchar(hiddenBearCond ? osc[lbR] : na, offset=-lbR, location=location.top, color=hiddenBearColor, textcolor=textColor, size=size.tiny, title="Hidden Bearish Label", text=" H Bear ", char=hiddenBearSymbol)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var box profitBox = na
var box stopLossBox = na
// ORDERS
if (bearishWTDivergence)
    strategy.entry(id="Buy", direction=strategy.long, limit=close, stop=(close / orderPercentage))
    strategy.exit(id="Buy", from_entry="Buy", profit=(close * orderPercentage), loss=(close / orderPercentage))
    profitBox := box.new(time, (close * orderPercentage), (time + 60 * 60), close, xloc=xloc.bar_time, force_overlay = true, bgcolor = color.rgb(0, 233, 0, 50))
    stopLossBox := box.new(time, close, (time + 60 * 60), (close / orderPercentage), xloc=xloc.bar_time, force_overlay = true, bgcolor = color.rgb(233, 0, 0, 50))
    // box.new(time - 3, (close * orderPercentage + (syminfo.mintick * 3)), (time + 60 * 60 + 3), (close / orderPercentage - (syminfo.mintick * 3)), xloc=xloc.bar_time, border_style=line.style_solid, force_overlay = true, bgcolor = color.rgb(0, 0, 0, 100), border_width=3, border_color=color.green)
if (bullishWTDivergence)
    strategy.entry(id="Sell", direction=strategy.short, stop=close, limit=(close / orderPercentage))
    strategy.exit(id="Sell", from_entry="Sell", loss=(close * orderPercentage), profit=(close / orderPercentage))
    stopLossBox := box.new(time, close, (time + 60 * 60), (close * orderPercentage), xloc=xloc.bar_time, force_overlay = true, bgcolor = color.rgb(233, 0, 0, 50))
    profitBox := box.new(time, (close / orderPercentage), (time + 60 * 60), close, xloc=xloc.bar_time, force_overlay = true, bgcolor = color.rgb(0, 233, 0, 50))
    // box.new(time - 3, (close * orderPercentage + (syminfo.mintick * 3)), (time + 60 * 60 + 3), (close / orderPercentage - (syminfo.mintick * 3)), xloc=xloc.bar_time, border_style=line.style_solid, force_overlay = true, bgcolor = color.rgb(0, 0, 0, 100), border_width=3, border_color=color.green)
